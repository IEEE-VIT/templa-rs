# This action will generate Windows|Linux|MacOS binary releases

name: Release

on:
  create:
    tags:
      - 'v*'

jobs:
  build_release:
    name: Build release binaries
    strategy:
      fail-fast: true
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: templa-rs-x86_64-unknown-linux-gnu.tar.gz

          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: templa-rs-x86_64-unknown-linux-musl.tar.gz

          - target: i686-unknown-linux-musl
            os: ubuntu-latest
            name: templa-rs-i686-unknown-linux-musl.tar.gz

          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            name: templa-rs-aarch64-unknown-linux-musl.tar.gz

          - target: arm-unknown-linux-musleabihf
            os: ubuntu-latest
            name: templa-rs-arm-unknown-linux-musleabihf.tar.gz

          - target: x86_64-apple-darwin
            os: macOS-latest
            name: templa-rs-x86_64-apple-darwin.tar.gz

          - target: aarch64-apple-darwin
            os: macOS-latest
            name: templa-rs-aarch64-apple-darwin.tar.gz

          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: templa-rs-x86_64-pc-windows-msvc.zip

          - target: i686-pc-windows-msvc
            os: windows-latest
            name: templa-rs-i686-pc-windows-msvc.zip

    runs-on: ${{ matrix.os }}
    continue-on-error: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
            path: |
              ~/.cargo/registry
              ~/.cargo/git
            key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: ${{ matrix.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        env:
          SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk
        with:
          command: build
          args: --release --locked --target ${{ matrix.target }}
          use-cross: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Prepare artifacts [Windows]
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip templa-rs.exe
          7z a ../../../${{ matrix.name }} templa-rs.exe
          cd -
      - name: Prepare artifacts [Unix]
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip templa-rs || true
          tar czvf ../../../${{ matrix.name }} templa-rs
          cd -

      - name: Deploy | Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  publish_release:
    name: Create and Publish GitHub Release
    needs: build_release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set the release version
        shell: bash
        run: echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV

      - name: Setup | Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.15.7"

      - name: Generate Changelog
        run: |
          GO111MODULE=on go get github.com/git-chglog/git-chglog/cmd/git-chglog@0.9.1
          git-chglog -c .github/chglog/release.yml $(git describe --tags) > RELEASE.md

      - name: Download Artifacts
        uses: actions/download-artifact@v2

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.RELEASE_VERSION }}
          files: templa-rs-*/templa-rs-*
          body_path: RELEASE.md
